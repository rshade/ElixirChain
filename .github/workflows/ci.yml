name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  MIX_ENV: test

jobs:
  test:
    name: Test (Elixir ${{ matrix.elixir }}, OTP ${{ matrix.otp }})
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - elixir: '1.18.4'
            otp: '28.0.2'
          - elixir: '1.16.3'
            otp: '26.2.5'

    services:
      postgres:
        image: postgres:16.3
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: elixir_chain_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

      redis:
        image: redis:7.2.5
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Elixir
        uses: erlef/setup-beam@v1
        with:
          elixir-version: ${{ matrix.elixir }}
          otp-version: ${{ matrix.otp }}

      - name: Cache Mix dependencies
        uses: actions/cache@v4
        with:
          path: |
            deps
            _build
          key: ${{ runner.os }}-mix-${{ matrix.elixir }}-${{ matrix.otp }}-${{ hashFiles('**/mix.lock') }}
          restore-keys: |
            ${{ runner.os }}-mix-${{ matrix.elixir }}-${{ matrix.otp }}-
            ${{ runner.os }}-mix-

      - name: Install Mix dependencies
        run: |
          mix local.hex --force
          mix local.rebar --force
          mix deps.get

      - name: Compile dependencies
        run: mix deps.compile

      - name: Compile project
        run: mix compile --warnings-as-errors

      - name: Check formatting
        run: mix format --check-formatted

      - name: Run Credo
        run: mix credo --strict

      - name: Run tests
        run: mix test --cover

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          file: ./cover/excoveralls.json
          fail_ci_if_error: false

  dialyzer:
    name: Dialyzer (Elixir ${{ matrix.elixir }}, OTP ${{ matrix.otp }})
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - elixir: '1.18.4'
            otp: '28.0.2'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Elixir
        uses: erlef/setup-beam@v1
        with:
          elixir-version: ${{ matrix.elixir }}
          otp-version: ${{ matrix.otp }}

      - name: Cache Mix dependencies
        uses: actions/cache@v4
        with:
          path: |
            deps
            _build
          key: ${{ runner.os }}-mix-${{ matrix.elixir }}-${{ matrix.otp }}-${{ hashFiles('**/mix.lock') }}

      - name: Cache PLT files
        uses: actions/cache@v4
        with:
          path: priv/plts
          key: ${{ runner.os }}-dialyzer-${{ matrix.elixir }}-${{ matrix.otp }}-${{ hashFiles('**/mix.lock') }}
          restore-keys: |
            ${{ runner.os }}-dialyzer-${{ matrix.elixir }}-${{ matrix.otp }}-
            ${{ runner.os }}-dialyzer-

      - name: Install Mix dependencies
        run: |
          mix local.hex --force
          mix local.rebar --force
          mix deps.get

      - name: Compile dependencies
        run: mix deps.compile

      - name: Create PLT directory
        run: mkdir -p priv/plts

      - name: Run Dialyzer
        run: mix dialyzer

  security:
    name: Security Audit
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Elixir
        uses: erlef/setup-beam@v1
        with:
          elixir-version: '1.18.4'
          otp-version: '28.0.2'

      - name: Install Mix dependencies
        run: |
          mix local.hex --force
          mix local.rebar --force
          mix deps.get

      - name: Run security audit
        run: mix hex.audit

  build:
    name: Build Release
    runs-on: ubuntu-latest
    needs: [test, dialyzer]
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Elixir
        uses: erlef/setup-beam@v1
        with:
          elixir-version: '1.18.4'
          otp-version: '28.0.2'

      - name: Install Mix dependencies
        run: |
          mix local.hex --force
          mix local.rebar --force
          mix deps.get --only prod

      - name: Compile for production
        env:
          MIX_ENV: prod
        run: mix compile

      - name: Create release
        env:
          MIX_ENV: prod
        run: mix release

      - name: Upload release artifact
        uses: actions/upload-artifact@v4
        with:
          name: elixir-chain-release
          path: _build/prod/rel/elixir_chain/